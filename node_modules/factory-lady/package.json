{
  "name": "factory-lady",
  "description": "a factory library for javascript / node.js inspired by factory_girl",
  "main": "./index",
  "author": {
    "name": "Peter Jihoon Kim"
  },
  "version": "0.1.0",
  "keywords": [
    "factory",
    "test",
    "bdd",
    "tdd",
    "fixture"
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/petejkim/factory-lady.git"
  },
  "bugs": {
    "url": "http://github.com/petejkim/factory-lady/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/petejkim/factory-lady/raw/master/LICENSE"
    }
  ],
  "dependencies": {},
  "devDependencies": {
    "mocha": ">= 0.7.1",
    "should": ">= 0.4.2"
  },
  "readme": "# factory-lady.js\n\nFactory-lady is a factory library for [Node.js](http://nodejs.org/) / JavaScript inspired by [Factory\\_girl](http://github.com/thoughtbot/factory_girl). It works asynchronously and supports lazy attributes as well as associations.\n\nIt works as long as `new` keyword is used on the model to instantiate new objects and `save` method is used to persist objects. For example, [Mongoose](http://github.com/LearnBoost/mongoose.git) models follow such convention.\n\n## Installation\n\nNode.js:\n\n```\nnpm install factory-lady\n```\n\nTo use Factory-lady in the browser or other JavaScript environments, just copy and include `factory-lady.js` under `lib` directory.\n\n## Defining Factories\n\nJavaScript:\n\n```javascript\nvar Factory = require('factory-lady')\n  , User    = require('../../app/models/user')\n  , Post    = require('../../app/models/post');\n\nvar emailCounter = 1;\n\nFactory.define('user', User, {\n  email    : function(cb) { cb('user' + emailCounter++ + '@example.com'); } // lazy attribute\n, state    : 'activated'\n, password : '123456'\n});\n\nFactory.define('post', Post, {\n  user_id  : Factory.assoc('user', 'id') // simply Factory.assoc('user') for user object itself\n, subject  : 'Hello World'\n, content  : 'Lorem ipsum dolor sit amet...'\n});\n```\n\nCoffeeScript:\n\n```coffeescript\nFactory = require 'factory-lady'\nUser    = require '../../app/models/user'\nPost    = require '../../app/models/post'\n\nemailCounter = 1\n\nFactory.define 'user', User,\n  email    : (cb) -> cb(\"user#{emailCounter++}@example.com\") # lazy attribute\n  state    : 'activated'\n  password : '123456'\n\nFactory.define 'post', Post,\n  user_id  : Factory.assoc 'user', 'id' # simply Factory.assoc 'user' for user object itself\n  title    : 'Hello World'\n  content  : 'Lorem ipsum dolor sit amet...'\n```\n\n## Using Factories\n\nJavaScript:\n\n```javascript\nFactory.build('post', function(post) {\n  // post is a Post instance that is not saved\n});\n\nFactory.build('post', { title: 'Foo', content: 'Bar' }, function(post) {\n  // build a post and override title and content\n});\n\nFactory.create('post', function(post) {\n  // post is a saved Post instance\n});\n\nFactory('post', function(post) {\n  // post is a saved Post instance\n  // same as Factory.create\n});\n```\n\nCoffeeScript:\n\n```coffeescript\nFactory.build 'post', (post) ->\n  # post is a Post instance that is not saved\n\nFactory.build 'post', title: 'Foo', content: 'Bar', (post) ->\n  # post is a Post instance that is not saved\n\nFactory.create 'post', (post) ->\n  # post is a saved Post instance\n\nFactory 'post', (post) ->\n  # post is a saved Post instance\n  # same as Factory.create\n```\n\n## License\n\nCopyright (c) 2011 Peter Jihoon Kim. This software is licensed under the [MIT License](http://github.com/petejkim/factory-lady/raw/master/LICENSE).\n\n",
  "readmeFilename": "README.md",
  "_id": "factory-lady@0.1.0",
  "dist": {
    "shasum": "1520ebccb7fd84a68c4eb28221f3e78a427a5bb4"
  },
  "_from": "factory-lady@",
  "_resolved": "https://registry.npmjs.org/factory-lady/-/factory-lady-0.1.0.tgz"
}
