// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(['jquery', 'underscore', 'EventEmitter', 'CommandTypes'], function($, _, event_emitter, commands) {
    var ToolBar;
    return ToolBar = (function() {

      function ToolBar(items_class_selector, default_command) {
        this.onCanvasItemSelected = __bind(this.onCanvasItemSelected, this);

        var _this = this;
        this.current_command = default_command;
        this.toolbar_items = $(items_class_selector);
        event_emitter.on("ItemSelected", this.onCanvasItemSelected);
        this.toolbar_items.click(function(evt, ui) {
          var command_name, _ref;
          command_name = $(evt.currentTarget).data('action');
          if (((_ref = _this.current_command) != null ? _ref.commandName : void 0) === command_name) {
            return;
          } else {
            _this.current_command = commands[command_name];
          }
          _this.set_active($(evt.currentTarget));
          return event_emitter.emit('Toolbar.MenuItemSelected', command_name);
        });
      }

      ToolBar.prototype.set_active = function(toolbar_item) {
        toolbar_item.addClass('active');
        if (this.active != null) {
          this.active.removeClass('active');
        }
        return this.active = toolbar_item;
      };

      ToolBar.prototype.set_initial_active = function() {
        var active_item, i, _i, _len, _ref;
        _ref = this.toolbar_items;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          i = _ref[_i];
          if ($(i).hasClass('active')) {
            active_item = $(i);
          }
        }
        if (active_item == null) {
          active_item = this.toolbar_items[0];
        }
        return this.set_active(active_item);
      };

      ToolBar.prototype.onCanvasItemSelected = function(item_type, item) {
        console.log("canvas item selected toolbar handler");
        return this.current_command.bind_to(item);
      };

      return ToolBar;

    })();
  });

}).call(this);
